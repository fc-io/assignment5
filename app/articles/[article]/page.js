import fetchQL from "./fetchQL";
import Link from 'next/link'
import Image from 'next/image'

async function getData(article) {
  const res = await fetchQL(article)
  // The return value is *not* serialized
  // You can return Date, Map, Set, etc.

  // Recommendation: handle errors
  if (!res.ok) {
    // This will activate the closest `error.js` Error Boundary
    throw new Error('Failed to fetch data');
  }

  return res.json();
}

// export const metadata = {
//   title: 'Disney Articles',
//   // description: 'Generated by create next app',
// }

export async function generateMetadata({ params, searchParams }) {
  return { title: `Disney Articles - ${params.article}` };
}

export default async function Article({ params }) {
  const data = await getData(params.article)

  console.log(data?.data?.characters?.items[0].name)
  const nextPage = Number(params?.article) + 1

  return <div>
    <h1>Article â€“ {params.article}</h1>
    <Link href={`/articles/${nextPage}`}>Next Page</Link>
    {data?.data?.characters?.items.map(({_id, name, imageUrl, films, shortFilms, tvShows, videoGames}) => {
      return <div key={_id}>
        <h1>{name}</h1>
        <img
          src={imageUrl}
          alt={name}
          // width={200}
          // height={200}
        />
        <p>shortFilms: <b>{shortFilms}</b></p>
        <p>tvShows: <b>{tvShows}</b></p>
        <p>videoGames: <b>{videoGames}</b></p>
        <p>films: <b>{films}</b></p>
      </div>
    })}
  </div>
}
